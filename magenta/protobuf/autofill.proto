// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
////////////////////////////////////////////////////////////////////////////////

syntax = "proto3";

package tensorflow.magenta;

import "magenta/protobuf/music.proto";

// Describes a piece of music and a section that should be filled in by the
// model.
message AutoFillRequest {
  // Describes which part of the music should be filled in by the model.
  message FillParameter {
    // Start time for the model to fill, inclusive.
    double start_time = 1;
    // End time for the model to fill, inclusive.
    double end_time = 2;
    // The first part (i.e., voice/track) for the model to fill, inclusive.
    int32 first_part = 3;
    // The last part (i.e., voice/track) for the model to fill, inclusive.
    int32 last_part = 4;
  }

  // The original piece of music.
  NoteSequence note_sequence = 1;
  // Which sections the model should fill.
  // These sections may already have music, or they may be empty. Different
  // models can decide to either augment existing music or entirely replace what
  // is already there.
  repeated FillParameter fill_parameters = 2;
}

// The response to the autofill request that includes the music generated by the
// model.
message AutoFillResponse {
  // Information about a section filled by the model.
  // To apply this to an existing piece of music, the section described here
  // should first be blanked out (all rests) and then filled in with the
  // supplied NoteSequence. If the model wants to add to already-existing music,
  // it should include the existing music in the NoteSequence.
  message FilledSection {
    // Start time for the model to fill, inclusive.
    double start_time = 1;
    // End time for the model to fill, inclusive.
    double end_time = 2;
    // The first part (i.e., voice/track) for the model to fill, inclusive.
    int32 first_part = 3;
    // The last part (i.e., voice/track) for the model to fill, inclusive.
    int32 last_part = 4;

    // The NoteSequence to fill the section with. Only the times and parts of
    // the NoteSequence described in the above field should be used.
    NoteSequence note_sequence = 5;
  }

  // Sections filled by the model.
  repeated FilledSection filled_sections = 1;
}
